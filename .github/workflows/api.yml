name: Test & Build

on: [push]
# on:
#   push:
#     paths:
#       - "api/src/**/*.ts"
#       - "api/src/package*.json"
defaults:
  run:
    working-directory: ./api
# env:
#   WORKDIR: ./api
jobs:
  testing:
    runs-on: ubuntu-latest
    # defaults:
    #   run:
    #     working-directory: ./api
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@master
        with:
          node-version: "12"
      - name: Install dependencies
        run: npm ci
      - name: Unit tests w/ coverage
        run: npm run test:coverage
      - name: LINTing
        run: npm run test:lint
      # - name: Test & publish code coverage
      #   uses: paambaati/codeclimate-action@v2.3.0
      #   env:
      #     CC_TEST_REPORTER_ID: ${{ secrets.TestReporterID }}
      #     CI: "true"
      #   with:
      #     coverageCommand: cd ${{ WORKDIR }} && npm run test:coverage
      #     debug: "true"
  build:
    runs-on: ubuntu-latest
    needs: [test]
    strategy:
      matrix:
        node-version: [10.x, 12.x]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - name: npm install and build
        run: |
          npm ci
          npm run build --if-present
        env:
          CI: "true"
  # img-build:
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/master'
  #   runs-on: ubuntu-latest
  #   needs: [test, build]
  #   steps:
  #     - name: OpenShift Action
  #       uses: redhat-developer/openshift-actions@v1.1
  #       with:
  #         version: "latest"
  #         openshift_server_url: ${{ secrets.OpenShiftServerURL}}
  #         parameters: '{"apitoken": "${{ secrets.OpenShiftToken }}", "acceptUntrustedCerts": "true"}'
  #         cmd: |
  #           'version'
  #           'start-build repo-mountie-master-build --follow -n devhub-tools'
  #           'status'
